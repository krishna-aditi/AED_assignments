/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.swing.table.DefaultTableModel;
import model.car;
import model.carFleet;

/**
 *
 * @author krish
 */
public class SearchCityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchCityJPanel
     */
    
    carFleet fleet;
    public SearchCityJPanel(carFleet fleet) {
        initComponents();
        
        this.fleet = fleet;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchNo = new javax.swing.JLabel();
        btnSearchCity = new javax.swing.JButton();
        lblSearchTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearchCity = new javax.swing.JTable();
        txtSearchCity = new javax.swing.JTextField();
        lblSearchCity = new javax.swing.JLabel();

        lblSearchNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSearchNo.setText("Enter model no:");

        btnSearchCity.setText("Search");
        btnSearchCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCityActionPerformed(evt);
            }
        });

        lblSearchTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblSearchTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearchTitle.setText("Search all available cars with city name");

        tblSearchCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Serial No.", "Model No.", "Number of Seats", "City", "Availability"
            }
        ));
        jScrollPane1.setViewportView(tblSearchCity);

        lblSearchCity.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblSearchCity.setText("Enter city:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSearchTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchCity)
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearchCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSearchCity, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchTitle)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSearchCity))
                .addGap(18, 18, 18)
                .addComponent(btnSearchCity)
                .addContainerGap(140, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCityActionPerformed
        // TODO add your handling code here:
        String searchCity = "";
        searchCity = txtSearchCity.getText();
        String avail = "";
        avail = "Yes";
        

        populateSearchCityTable(searchCity, avail);
    }//GEN-LAST:event_btnSearchCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearchCity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearchCity;
    private javax.swing.JLabel lblSearchNo;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JTable tblSearchCity;
    private javax.swing.JTextField txtSearchCity;
    // End of variables declaration//GEN-END:variables

    private void populateSearchCityTable(String searchCity, String avail) {
        DefaultTableModel searchCityModel = (DefaultTableModel) tblSearchCity.getModel(); // typecasting into DefaultTableModel class type
        searchCityModel.setRowCount(0);
        
        for(car carAdded: fleet.getFleet()){
            Object[] row = new Object[5]; // one for each column
            if( carAdded.getCity().equals(searchCity) && carAdded.getAvailability().equals(avail)){
                row[0] = carAdded.getSerialNo();
                row[1] = carAdded.getModelNo();
                row[2] = carAdded.getNoOfSeats();
                row[3] = carAdded.getCity();
                row[4] = carAdded.getAvailability();
                
                searchCityModel.addRow(row);
            }
        }
    }
}